generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  user
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  name          String
  password      String?
  emailVerified DateTime?
  image         String?
  roles         Role      @default(user)
  isActive      Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime?

  @@map("users")
}

model Category {
  id   String @id @default(uuid())
  name String

  photo Photo[]

  @@map("categories")
}

model State {
  id   String @id @default(uuid())
  name String
  code String

  photo Photo[]

  @@map("states")
}

model Discipline {
  id   String @id @default(uuid())
  name String

  photo Photo[]

  @@map("disciplines")
}

model Photo {
  id  String @id @default(uuid())
  url String

  photographerId String
  photographer   Photographer @relation(fields: [photographerId], references: [id])

  disciplineId String
  discipline   Discipline @relation(fields: [disciplineId], references: [id])
  eventId      String
  event        Event      @relation(fields: [eventId], references: [id])
  stateId      String
  state        State      @relation(fields: [stateId], references: [id])
  rama         Rama?      @relation(fields: [ramaId], references: [id])
  ramaId       String?
  venue        Venue?     @relation(fields: [venueId], references: [id])
  venueId      String?
  category     Category?  @relation(fields: [categoryId], references: [id])
  categoryId   String?

  createdAt DateTime  @default(now())
  updatedAt DateTime?

  @@map("photos")
}

model Event {
  id          String    @id @default(uuid())
  name        String
  date        DateTime
  location    String
  description String
  photos      Photo[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime?
  venue       Venue?    @relation(fields: [venueId], references: [id])
  venueId     String?

  @@map("events")
}

model Photographer {
  id     String  @id @default(uuid())
  name   String
  email  String
  phone  String
  photos Photo[]

  createdAt DateTime  @default(now())
  updatedAt DateTime?

  @@map("photographers")
}

model Venue {
  id          String    @id @default(uuid())
  name        String
  location    String
  description String
  events      Event[]
  photos      Photo[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime?

  @@map("venues")
}

model Rama {
  id   String @id @default(uuid())
  name String

  photo Photo[]

  @@map("ramas")
}
